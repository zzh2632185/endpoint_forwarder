# Claude Request Forwarder Configuration
# 完整配置示例，展示所有可用的配置选项

# 服务器配置
server:
  host: "127.0.0.1"      # 监听地址，默认: localhost
  port: 8087             # 监听端口，默认: 8080

# 路由策略配置(适用于组内)
strategy:
  type: "fastest"              # 路由策略: "priority" (优先级)、"fastest" (最快响应) 或 "round-robin" (轮询)
  fast_test_enabled: true          # 启用快速测试 (仅在 fastest 策略下生效)
  fast_test_cache_ttl: "30s"       # 快速测试结果缓存时间，默认: 3s
  fast_test_timeout: "5s"          # 快速测试超时时间，默认: 1s
  fast_test_path: "/v1/models"     # 快速测试路径，默认使用健康检查路径

# 重试配置
retry:
  max_attempts: 3        # 最大重试次数，默认: 3
  base_delay: "1s"       # 基础延迟时间，默认: 1s
  max_delay: "30s"       # 最大延迟时间，默认: 30s
  multiplier: 2.0        # 延迟倍数，默认: 2.0

# 健康检查配置
health:
  check_interval: "30s"  # 健康检查间隔，默认: 30s
  timeout: "5s"          # 健康检查超时，默认: 5s
  health_path: "/v1/models"  # 健康检查路径，默认: /v1/models

# 日志配置
logging:
  level: "info"          # 日志级别: debug, info, warn, error，默认: info
  format: "json"         # 日志格式: "json" 或 "text"，默认: text
  
  # 文件日志配置 (可选)
  file_enabled: false            # 是否启用文件日志，默认: false
  file_path: "logs/app.log"      # 日志文件路径，默认: logs/app.log
  max_file_size: "100MB"         # 单个日志文件最大大小，支持: KB, MB, GB，默认: 100MB
  max_files: 10                  # 最多保留的轮转文件数量，默认: 10
  compress_rotated: true         # 是否压缩轮转的旧日志文件，默认: false
  disable_response_limit: true   # 启用文件日志时是否取消响应内容输出限制，默认: false

# 流式传输配置
streaming:
  heartbeat_interval: "30s"  # 心跳间隔，默认: 30s
  read_timeout: "10s"         # 读取超时，默认: 1s
  max_idle_time: "120s"      # 最大空闲时间，默认: 120s

# 组管理配置
group:
  cooldown: "600s"           # 组失败后的冷却时间，默认: 600s

# 全局超时配置
global_timeout: "300s"       # 非流式请求的全局默认超时时间，默认: 300s (5分钟)

# 鉴权配置 (可选)
auth:
  enabled: false             # 是否启用鉴权，默认: false (不鉴权)
  # token: "your-bearer-token"  # Bearer Token，启用鉴权时必须设置

# TUI界面配置,如果部署在服务器上建议设置为 false
tui:
  enabled: true               # 是否启用TUI界面，默认: true
  update_interval: "1s"       # TUI刷新间隔，默认: 1s
  save_priority_edits: false  # 是否在TUI中保存优先级编辑到配置文件，默认: false（当前情况下保存配置文件可能会自动格式化配置文件）

# WebUI界面配置 - 浏览器访问的Web监控界面
webui:
  enabled: false              # 启用WebUI界面，默认: false
  host: "127.0.0.1"          # WebUI监听地址，默认: 127.0.0.1
  port: 8003                  # WebUI监听端口，默认: 8003
  password: ""                # WebUI访问密码，如果为空则不需要鉴权

# 代理配置 (可选)
proxy:
  enabled: false              # 是否启用代理
  type: "http"               # 代理类型: "http", "https", 或 "socks5"
  
  # 方式一: 完整代理 URL
  # url: "http://proxy.example.com:8080"
  # url: "https://proxy.example.com:8080"
  # url: "socks5://proxy.example.com:1080"
  
  # 方式二: 分别指定主机和端口
  host: "proxy.example.com"   # 代理主机
  port: 8080                  # 代理端口
  
  # 可选的认证信息
  # username: "proxy_user"    # 代理用户名
  # password: "proxy_pass"    # 代理密码

# 端点配置
endpoints:
  # 主要组端点 - 其他端点会继承此端点的 token 和 headers (如果未指定)
  - name: "primary"
    url: "https://api.openai.com"
    group: "main"            # 组名，用于分组管理
    group-priority: 1        # 组优先级 (数字越小优先级越高)
    priority: 1              # 组内优先级 (数字越小优先级越高)
    timeout: "300s"           # 请求超时时间，如果不设置则使用 global_timeout
    token: "sk-your-openai-api-key"  # API 密钥 (用于 Authorization 头)
    api-key: "your-api-key-value"    # API 密钥 (用于 X-Api-Key 头)
    headers:                 # 自定义请求头
      User-Agent: "Claude-Request-Forwarder/1.0"
      X-Custom-Header: "custom-value"

  # 主要组备用端点 - 会继承主要端点的 token、api-key、headers 和组设置
  - name: "primary_backup"
    url: "https://api.anthropic.com"
    priority: 2              # 组内优先级 2
    timeout: "300s"
    # group: "main" (继承自上一个端点)
    # group-priority: 1 (继承自上一个端点)
    # token、api-key 和 headers 会从第一个端点继承

  # 备用组端点 - 使用不同的组设置
  - name: "backup1"
    url: "https://api.example.com"
    group: "backup"          # 新的组名
    group-priority: 2        # 备用组优先级
    priority: 1              # 组内优先级
    timeout: "300s"
    token: "sk-different-api-key"  # 覆盖继承的 token
    api-key: "different-api-key"    # 覆盖继承的 api-key
    headers:
      Authorization: "Bearer custom-token"
      X-API-Version: "2024-01"
      # 其他 headers 仍会从第一个端点继承并与此处合并

  # 备用组的第二个端点 - 继承备用组设置
  - name: "backup2"
    url: "https://api.backup2.com"
    priority: 2              # 组内优先级 2
    timeout: "300s"
    # group: "backup" (继承自上一个端点)
    # group-priority: 2 (继承自上一个端点)
    # 其他设置继承自backup1端点

  # 本地端点组
  - name: "local"
    url: "http://localhost:11434"
    group: "local"           # 本地组
    group-priority: 3        # 最低组优先级
    priority: 1              # 组内优先级
    timeout: "300s"
    # 本地服务通常不需要 token